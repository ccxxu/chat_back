<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- 该路径下的资源不用过滤 -->
	<http pattern="/css/**" security="none" />
	<http pattern="/fonts/**" security="none" />
	<http pattern="/icons/**" security="none" />
	<http pattern="/images/**" security="none" />
	<http pattern="/img/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="/jsp/**" security="none" />
	<http pattern="/mp3_jpg/**" security="none" />
	<http pattern="/view/login.jsp" security="none" />
	<http pattern="/login" security="none" />
	
	<http auto-config="false" access-denied-page="/jsp/error/403.jsp" use-expressions="true" entry-point-ref="authenticationEntryPoint">

		<custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER" />
		<custom-filter position="FORM_LOGIN_FILTER" ref="validateCodeAuthenticationFilter" />
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="myFilter" />

		<!-- 防止session固话攻击 -->
		<session-management session-fixation-protection="none" session-authentication-error-url="/sessionError" invalid-session-url="/login" />
		<!-- session相关管理 -->
		<session-management  session-authentication-strategy-ref="sessionAuthenticationStrategy" />

		<!-- logout -->
		<logout invalidate-session="true" logout-url="/j_spring_security_logout" success-handler-ref="logoutSuccessHandler"/>
	</http>
	
	<!-- cookies免登录 -->
	<beans:bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">  
        <beans:property name="userDetailsService" ref="myUserDetailServiceImpl" />
       	<!--  默认时间604800秒(一个星期)  --> 
        <beans:property name="tokenValiditySeconds" value="604800" />  
        <beans:property name="key" value="rememberCmsAAAA" />  
    </beans:bean>  

	<!-- 登录入口 org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint -->
	<beans:bean id="authenticationEntryPoint" class="club.mzwh.security.web.auth.MyLoginUrlAuthenticationEntryPoint">  
        <beans:property name="loginFormUrl" value="/view/login.jsp" />  
    </beans:bean> 

	<beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="expiredUrl" value="/login" />
	</beans:bean>
	
	<beans:bean id="sessionAuthenticationStrategy" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="10" />
		<!-- 防止session攻击 -->
		<beans:property name="alwaysCreateSession" value="true" />
		<beans:property name="migrateSessionAttributes" value="false" />
		<!-- 同一个帐号 同时只能一个人登录 -->
		<beans:property name="exceptionIfMaximumExceeded" value="false" />
	</beans:bean>

	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

	<beans:bean id="logoutSuccessHandler" class="club.mzwh.security.service.impl.LogoutSuccessHandler"/>
	
	<!-- 国际化 -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 如果不加载自己的国际化文件，去加载 Security 内部的国际化文件classpath:org/springframework/security/messages_zh_CN -->
		<beans:property name="basename" value="classpath:messages_zh_CN" />
	</beans:bean>
	<!-- 登出 -->

	<!-- 验证码过滤器 -->
	<beans:bean id="validateCodeAuthenticationFilter" class="club.mzwh.core.filter.ValidateCodeUsernamePasswordAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>
		<!-- 登录成功控制 -->
		<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>
		<!-- 登录失败控制 -->
		<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="myAuthenticationManager"></beans:property>
		<beans:property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy"></beans:property>
	</beans:bean>

	<!-- 登录成功 -->
	<beans:bean id="loginLogAuthenticationSuccessHandler" class="club.mzwh.security.service.impl.SimpleUrlAuthenticationSuccessHandlerImpl">
		<beans:property name="defaultTargetUrl" value="/index"></beans:property>
	</beans:bean>

	<!-- 登录失败 -->
	<beans:bean id="simpleUrlAuthenticationFailureHandler" class="club.mzwh.security.service.impl.SimpleUrlAuthenticationFailureHandlerImpl">
		<beans:property name="defaultFailureUrl" value="/view/login.jsp?error=true"></beans:property>
	</beans:bean>

	<!-- 配置过滤器 -->
	<beans:bean id="myFilter" class="club.mzwh.security.service.impl.FilterSecurityInterceptorImpl">
		<beans:property name="authenticationManager" ref="myAuthenticationManager" />
		<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManager" />
		<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
		<beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />
	</beans:bean>
	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<authentication-manager alias="myAuthenticationManager">
		<authentication-provider user-service-ref="myUserDetailServiceImpl" />
	</authentication-manager>
	<beans:bean id="myAccessDecisionManager"
		class="club.mzwh.security.service.impl.AccessDecisionManagerImpl"></beans:bean>
	<beans:bean id="mySecurityMetadataSource"
		class="club.mzwh.security.service.impl.SecurityMetadataSourceServiceImpl">
	</beans:bean>

	<authentication-manager>
		<authentication-provider user-service-ref="myUserDetailServiceImpl">
			<!-- 可设置hash使用sha1或md5散列密码后再存入数据库 -->
			<password-encoder hash="md5">
				<salt-source user-property="username" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="myUserDetailServiceImpl"
		class="club.mzwh.security.service.impl.UserDetailServiceImpl">
	</beans:bean>
</beans:beans>